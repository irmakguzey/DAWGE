Version 1.0.0:
- LegController implemented from MIT repo
- main_helper is implemented. main_helper.cpp is a merge of RobotRunner and main_helper inside MIT repo. 
- JPosInitializer and BSplineBasic are added but are not yet used. Initial positions are going to be received and added as a yaml file. 
- a1.urdf is added from a1_description ROS package.
- version.txt is added. 

----------

Version 1.0.1:
- TaskBase, MoveForwardTask and comm_hardware executable is implemented
    - TaskBase is a base task class for high level tasks 
    - MoveForwardTask is a class for making the robot move forward with a set velocity only 
    - comm_hardware is the executable to communicate high level ROS topics and the robot with LCm
- CMakeList not updated yet
- It has not been built yet

----------

Version 1.1.0:
- TaskBase, MoveForwardTask and comm_hw work
    We have managed to move the robot 1m with this setup
- A script to update all the contents of dawge_planner package inside unitree robot


----------

Version 1.1.1:
- Changed TaskBase name to HighLevelTask. 
- Teleop module added. With a given velocity command high level commands are sent to the robot. 
- Built in Bangalore computer is done. Python scripts should be run in Bangalore - basically anything hardware unrelated should run in Bangalore. 
- Cleaned some of the python scripts. 
- Launch files for both to run on the robot and on Bangalore should be added, then there will be an upgrade.

----------

Version 1.1.2:
- Streaming and saving data is added
- Works on Bangalore but haven't tested on DAWGE

----------

Version 1.1.3:
- Saving and streaming works


----------

Version 1.2.0
- Contrastive Learning added
- It is not complete yet when it's complete version will go up to 2.0.0
- Bangalore will be formatted

---------- 

Version 2.0.0
- First training model is working with distributed system using hydra
- Data is collected 

----------

Version 2.1.0
- PLI is implemented and tested
- Dataset should be added as hydra 
- Base class for agent initialization should be implemented